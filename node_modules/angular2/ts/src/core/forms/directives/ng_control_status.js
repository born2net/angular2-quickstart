System.register(['angular2/src/core/metadata', 'angular2/src/core/di', 'angular2/src/core/facade/lang'], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __param = (this && this.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var metadata_1, di_1, lang_1;
    var NgControlStatus;
    return {
        setters:[
            function (metadata_1_1) {
                metadata_1 = metadata_1_1;
            },
            function (di_1_1) {
                di_1 = di_1_1;
            },
            function (lang_1_1) {
                lang_1 = lang_1_1;
            }],
        execute: function() {
            let NgControlStatus = class {
                constructor(cd) {
                    this._cd = cd;
                }
                get ngClassUntouched() {
                    return lang_1.isPresent(this._cd.control) ? this._cd.control.untouched : false;
                }
                get ngClassTouched() {
                    return lang_1.isPresent(this._cd.control) ? this._cd.control.touched : false;
                }
                get ngClassPristine() {
                    return lang_1.isPresent(this._cd.control) ? this._cd.control.pristine : false;
                }
                get ngClassDirty() {
                    return lang_1.isPresent(this._cd.control) ? this._cd.control.dirty : false;
                }
                get ngClassValid() {
                    return lang_1.isPresent(this._cd.control) ? this._cd.control.valid : false;
                }
                get ngClassInvalid() {
                    return lang_1.isPresent(this._cd.control) ? !this._cd.control.valid : false;
                }
            };
            NgControlStatus = __decorate([
                metadata_1.Directive({
                    selector: '[ng-control],[ng-model],[ng-form-control]',
                    host: {
                        '[class.ng-untouched]': 'ngClassUntouched',
                        '[class.ng-touched]': 'ngClassTouched',
                        '[class.ng-pristine]': 'ngClassPristine',
                        '[class.ng-dirty]': 'ngClassDirty',
                        '[class.ng-valid]': 'ngClassValid',
                        '[class.ng-invalid]': 'ngClassInvalid'
                    }
                }),
                __param(0, di_1.Self())
            ], NgControlStatus);
            NgControlStatus = NgControlStatus;
        }
    }
});
//# sourceMappingURL=ng_control_status.js.map