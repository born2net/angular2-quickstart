System.register(["angular2/src/core/di", "angular2/src/core/render/api", "angular2/src/web_workers/shared/api"], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __param = (this && this.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var di_1, api_1, api_2;
    var RenderProtoViewRefStore, WebWorkerRenderProtoViewRef;
    return {
        setters:[
            function (di_1_1) {
                di_1 = di_1_1;
            },
            function (api_1_1) {
                api_1 = api_1_1;
            },
            function (api_2_1) {
                api_2 = api_2_1;
            }],
        execute: function() {
            let RenderProtoViewRefStore = class {
                constructor(onWebworker) {
                    this._lookupByIndex = new Map();
                    this._lookupByProtoView = new Map();
                    this._nextIndex = 0;
                    this._onWebworker = onWebworker;
                }
                allocate() {
                    var index = this._nextIndex++;
                    var result = new WebWorkerRenderProtoViewRef(index);
                    this.store(result, index);
                    return result;
                }
                store(ref, index) {
                    this._lookupByProtoView.set(ref, index);
                    this._lookupByIndex.set(index, ref);
                }
                deserialize(index) {
                    if (index == null) {
                        return null;
                    }
                    return this._lookupByIndex.get(index);
                }
                serialize(ref) {
                    if (ref == null) {
                        return null;
                    }
                    if (this._onWebworker) {
                        return ref.refNumber;
                    }
                    else {
                        return this._lookupByProtoView.get(ref);
                    }
                }
            };
            RenderProtoViewRefStore = __decorate([
                di_1.Injectable(),
                __param(0, di_1.Inject(api_2.ON_WEB_WORKER))
            ], RenderProtoViewRefStore);
            RenderProtoViewRefStore = RenderProtoViewRefStore;
            class WebWorkerRenderProtoViewRef extends api_1.RenderProtoViewRef {
                constructor(refNumber) {
                    super();
                    this.refNumber = refNumber;
                }
            }
            WebWorkerRenderProtoViewRef = WebWorkerRenderProtoViewRef;
        }
    }
});
//# sourceMappingURL=render_proto_view_ref_store.js.map