System.register([], function(exports_1) {
    var LocationStrategy;
    function normalizeQueryParams(params) {
        return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;
    }
    exports_1("normalizeQueryParams", normalizeQueryParams);
    return {
        setters:[],
        execute: function() {
            /**
             * `LocationStrategy` is responsible for representing and reading route state
             * from the the browser's URL. Angular provides two strategies:
             * {@link HashLocationStrategy} (default) and {@link PathLocationStrategy}.
             *
             * This is used under the hood of the {@link Location} service.
             *
             * Applications should use the {@link Router} or {@link Location} services to
             * interact with application route state.
             *
             * For instance, {@link HashLocationStrategy} produces URLs like
             * `http://example.com#/foo`, and {@link PathLocationStrategy} produces
             * `http://example.com/foo` as an equivalent URL.
             *
             * See these two classes for more.
             */
            class LocationStrategy {
            }
            LocationStrategy = LocationStrategy;
        }
    }
});
//# sourceMappingURL=location_strategy.js.map